{"success": true, "data": {"id": 38, "name": "Initiation au JSON", "value": 75, "description": "# Initiation au JSON\r\n\r\nAuthor: Francis Labelle\r\n\r\nMaintenant que vous savez ouvrir des sockets, votre prochain d\u00e9fi est de r\u00e9ussir \u00e0 impl\u00e9menter un protocole r\u00e9seau plus flexible. Pour cela, vous allez utiliser le format JSON!\r\n\r\nLe JSON est un format de donn\u00e9es tr\u00e8s r\u00e9pandu. Il est facile \u00e0 lire \u00e0 l'oeil. [En voici des exemples](https://json.org/example.html).\r\n\r\n## Les types de donn\u00e9es primaires\r\nLe JSON peut repr\u00e9senter des types de donn\u00e9es comme les `string`, les entiers et les nombres \u00e0 virgules:\r\n\r\n```json\r\n{\r\n    \"string\": \"Salut!\",\r\n    \"age\": 23,\r\n    \"ratio\": 0.25\r\n}\r\n```\r\n\r\n## Les tableaux\r\nLes tableaux sont des collections de donn\u00e9es mises entre crochets. Le type des donn\u00e9es peut varier:\r\n\r\n```json\r\n{\r\n    \"array\": [1, \"deux\", 3.0, 4]\r\n}\r\n```\r\n\r\n## Les objets\r\nLes objets JSON sont mis entre accolades, et contiennent des propri\u00e9t\u00e9s qui peuvent \u00eatre des donn\u00e9es de tous les types (y compris d'autres objets):\r\n\r\n```json\r\n{\r\n    \"nom\": \"Sylvain\",\r\n    \"data\": [1, 2, 3, 4, 5],\r\n    \"maison\": {\r\n        \"adresse\": \"123 peel\",\r\n        \"ville\": \"Montr\u00e9al\"\r\n    }\r\n}\r\n```\r\n\r\n## Le d\u00e9fi\r\n\r\nDans ce d\u00e9fi, le serveur vous envoie un objet JSON d\u00e9crivant une personne, son enfant et son petit-enfant. Vous devez:\r\n- Aller chercher l'objet du petit-enfant\r\n- Ajouter la propri\u00e9t\u00e9 `grandparent` avec comme valeur le nom de son grand-parent\r\n- Envoyer cet objet avec sa nouvelle propri\u00e9t\u00e9 au serveur\r\n\r\n### Exemple: donn\u00e9es du serveur\r\n> Note 1: les noms seront remplac\u00e9s par des noms al\u00e9atoires.\r\n\r\n> Note 2: les commentaires (`// ...`) ne sont pas valides en JSON. Ils sont utilis\u00e9s ici seulement pour clarifier l'exemple.\r\n\r\n```json\r\n{\r\n    \"name\": \"Grand-parent\",\r\n    \"child\": {\r\n        \"name\": \"Parent\",\r\n        // ...\r\n        \"child\": {\r\n            \"name\": \"Petit-enfant\"\r\n            // ...\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Exemple: r\u00e9ponse au serveur\r\n```json\r\n{\r\n    \"name\": \"Petit-enfant\",\r\n    // ...\r\n    // Autres propri\u00e9t\u00e9s de l'enfant envoy\u00e9es par le serveur\r\n    // ...\r\n    \"grandparent\": \"Grand-parent\"\r\n}\r\n```\r\n\r\n> ATTENTION: Pour ce d\u00e9fi, n'impl\u00e9mentez pas votre propre d\u00e9codeur de JSON. Cherchez plut\u00f4t une librairie \u00e0 utiliser qui le fera \u00e0 votre place. Ne r\u00e9inventez pas la roue!\r\n\r\n\r\nServeur: `nc challenges.unitedctf.ca 3005`", "connection_info": null, "next_id": null, "category": "Programming", "state": "visible", "max_attempts": 0, "type": "standard", "type_data": {"id": "standard", "name": "standard", "templates": {"create": "/plugins/challenges/assets/create.html", "update": "/plugins/challenges/assets/update.html", "view": "/plugins/challenges/assets/view.html"}, "scripts": {"create": "/plugins/challenges/assets/create.js", "update": "/plugins/challenges/assets/update.js", "view": "/plugins/challenges/assets/view.js"}}, "solves": 39, "solved_by_me": false, "attempts": 0, "files": [], "tags": [], "hints": [], "view": "<div class=\"modal-dialog\" role=\"document\">\n\t<div class=\"modal-content\">\n\t\t<div class=\"modal-body\">\n\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t\t<ul class=\"nav nav-tabs\">\n\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t<a class=\"nav-link active\" href=\"#challenge\">Challenge</a>\n\t\t\t\t</li>\n\t\t\t\t\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a class=\"nav-link challenge-solves\" href=\"#solves\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t39 Solves\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\n\t\t\t</ul>\n\t\t\t<div role=\"tabpanel\">\n\t\t\t\t<div class=\"tab-content\">\n\t\t\t\t\t<div role=\"tabpanel\" class=\"tab-pane fade show active\" id=\"challenge\">\n\t\t\t\t\t\t<h2 class='challenge-name text-center pt-3'>\n\t\t\t\t\t\t\tInitiation au JSON\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<h3 class=\"challenge-value text-center\">\n\t\t\t\t\t\t\t75\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<div class=\"challenge-tags text-center\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<span class=\"challenge-desc\"><h1>Initiation au JSON</h1>\n<p>Author: Francis Labelle</p>\n<p>Maintenant que vous savez ouvrir des sockets, votre prochain d\u00e9fi est de r\u00e9ussir \u00e0 impl\u00e9menter un protocole r\u00e9seau plus flexible. Pour cela, vous allez utiliser le format JSON!</p>\n<p>Le JSON est un format de donn\u00e9es tr\u00e8s r\u00e9pandu. Il est facile \u00e0 lire \u00e0 l'oeil. <a href=\"https://json.org/example.html\">En voici des exemples</a>.</p>\n<h2>Les types de donn\u00e9es primaires</h2>\n<p>Le JSON peut repr\u00e9senter des types de donn\u00e9es comme les <code>string</code>, les entiers et les nombres \u00e0 virgules:</p>\n<pre><code class=\"language-json\">{\n    &quot;string&quot;: &quot;Salut!&quot;,\n    &quot;age&quot;: 23,\n    &quot;ratio&quot;: 0.25\n}\n</code></pre>\n<h2>Les tableaux</h2>\n<p>Les tableaux sont des collections de donn\u00e9es mises entre crochets. Le type des donn\u00e9es peut varier:</p>\n<pre><code class=\"language-json\">{\n    &quot;array&quot;: [1, &quot;deux&quot;, 3.0, 4]\n}\n</code></pre>\n<h2>Les objets</h2>\n<p>Les objets JSON sont mis entre accolades, et contiennent des propri\u00e9t\u00e9s qui peuvent \u00eatre des donn\u00e9es de tous les types (y compris d'autres objets):</p>\n<pre><code class=\"language-json\">{\n    &quot;nom&quot;: &quot;Sylvain&quot;,\n    &quot;data&quot;: [1, 2, 3, 4, 5],\n    &quot;maison&quot;: {\n        &quot;adresse&quot;: &quot;123 peel&quot;,\n        &quot;ville&quot;: &quot;Montr\u00e9al&quot;\n    }\n}\n</code></pre>\n<h2>Le d\u00e9fi</h2>\n<p>Dans ce d\u00e9fi, le serveur vous envoie un objet JSON d\u00e9crivant une personne, son enfant et son petit-enfant. Vous devez:</p>\n<ul>\n<li>Aller chercher l'objet du petit-enfant</li>\n<li>Ajouter la propri\u00e9t\u00e9 <code>grandparent</code> avec comme valeur le nom de son grand-parent</li>\n<li>Envoyer cet objet avec sa nouvelle propri\u00e9t\u00e9 au serveur</li>\n</ul>\n<h3>Exemple: donn\u00e9es du serveur</h3>\n<blockquote>\n<p>Note 1: les noms seront remplac\u00e9s par des noms al\u00e9atoires.</p>\n</blockquote>\n<blockquote>\n<p>Note 2: les commentaires (<code>// ...</code>) ne sont pas valides en JSON. Ils sont utilis\u00e9s ici seulement pour clarifier l'exemple.</p>\n</blockquote>\n<pre><code class=\"language-json\">{\n    &quot;name&quot;: &quot;Grand-parent&quot;,\n    &quot;child&quot;: {\n        &quot;name&quot;: &quot;Parent&quot;,\n        // ...\n        &quot;child&quot;: {\n            &quot;name&quot;: &quot;Petit-enfant&quot;\n            // ...\n        }\n    }\n}\n</code></pre>\n<h3>Exemple: r\u00e9ponse au serveur</h3>\n<pre><code class=\"language-json\">{\n    &quot;name&quot;: &quot;Petit-enfant&quot;,\n    // ...\n    // Autres propri\u00e9t\u00e9s de l'enfant envoy\u00e9es par le serveur\n    // ...\n    &quot;grandparent&quot;: &quot;Grand-parent&quot;\n}\n</code></pre>\n<blockquote>\n<p>ATTENTION: Pour ce d\u00e9fi, n'impl\u00e9mentez pas votre propre d\u00e9codeur de JSON. Cherchez plut\u00f4t une librairie \u00e0 utiliser qui le fera \u00e0 votre place. Ne r\u00e9inventez pas la roue!</p>\n</blockquote>\n<p>Serveur: <code>nc challenges.unitedctf.ca 3005</code></p>\n</span>\n\n\t\t\t\t\t\t<span class=\"challenge-connection-info\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<div class=\"challenge-hints hint-row row\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"row challenge-files text-center pb-3\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<div class=\"row submit-row\">\n\t\t\t\t\t\t\t<div class=\"col-md-9 form-group\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<input id=\"challenge-id\" class=\"challenge-id\" type=\"hidden\" value=\"38\">\n\t\t\t\t\t\t\t\t\t<input id=\"challenge-input\" class=\"challenge-input\" type=\"text\" name=\"answer\" placeholder=\"Flag\"/>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-3 form-group key-submit\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button id=\"challenge-submit\" class=\"challenge-submit\" type=\"submit\">\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"row notification-row\">\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t\t\t<div id=\"result-notification\" class=\"alert alert-dismissable text-center w-100\"\n\t\t\t\t\t\t\t\t\t role=\"alert\" style=\"display: none;\">\n\t\t\t\t\t\t\t\t\t<strong id=\"result-message\"></strong>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div role=\"tabpanel\" class=\"tab-pane fade\" id=\"solves\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t\t\t<table class=\"table table-striped text-center\">\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td><b>Name</b>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td><b>Date</b>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody id=\"challenge-solves-names\">\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>"}}
